")
;
""
"
download.file(fileUrl, destfile="idaho.csv")
download.file(fileUrl, destfile="idaho.csv", method="curl")
download.file(fileUrl, destfile="./idaho.csv", method="curl")
?download.file
download.file(fileUrl, destfile="./idaho.csv", method="wget")
download.file(url= fileUrl, destfile="./idaho.csv")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url= fileUrl, destfile="./idaho.csv")
download.file(url= fileUrl, destfile="./idaho.csv", method="curl")
download.file(url= fileUrl, destfile="idaho.csv", method="curl")
fileUrl <- 'http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
download.file(url= fileUrl, destfile="idaho.csv", method="curl")
download.file(url= fileUrl, destfile="idaho.csv")
fileUrl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
download.file(url= fileUrl, destfile="idaho.csv")
getwd()
setwd("data-science")
getwd()
setwd("D:\\John\\Documents\\Data-Science\\3 - Data")
getwd()
download.file(url= fileUrl, destfile="idaho.csv")
idahoData <- read.table("idaho.csv", sep = ",", header=TRUE)
head(cameraData)
head(idahoData)
homes <- idahoData[VAL > 100000]
homes <- idahoData[$VAL > 100000]
colnames(idahoData)
idahoData[["VAL"]]
idahoData[["VAL"] > 100000]
idahoData[["VAL"] = 24]
idahoData[["VAL"] =- 24]
idahoData[["VAL"]] == 24
idahoData[["VAL"]] == 24 & !is.na(idahoData[["VAL"]])
tmp <- idahoData[["VAL"]] == 24 & !is.na(idahoData[["VAL"]])
sum(tmp)
idahoData[["FES"]]
View(idahoData)
gasFile <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'
download.file(url=gasFile, destfile="gas.xslx")
dat <- read.xslx("gas.xslx", colIndex=colIndex, rowIndex=rowIndex)
library(xslx)
library(xlsx)
?install
??install
cran(xlsx)
cpan
install.packages(xlsx)
install.packages("xlsx")
library(xlsx)
dat <- read.xslx("gas.xslx", colIndex=colIndex, rowIndex=rowIndex)
dat <- read.xlsx("gas.xslx", colIndex=colIndex, rowIndex=rowIndex)
download.file(url=gasFile, destfile="gas.xlsx")
gasFile <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'
download.file(url=gasFile, destfile="gas.xlsx", method="curl")
download.file(url=gasFile, destfile="gas.xlsx")
gasFile <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(url=gasFile, destfile="gas.xlsx")
close(gasFile)
gasFile.close()
dat <- read.xlsx("gas2.xslx", colIndex=colIndex, rowIndex=rowIndex, sheetIndex=1)
dat <- read.xlsx("gas2.xlsx", colIndex=colIndex, rowIndex=rowIndex, sheetIndex=1)
colIndex <- 7:15
rowIndex <- 18:23
dat <- read.xlsx("gas2.xlsx", colIndex=colIndex, rowIndex=rowIndex, sheetIndex=1)
um(dat$Zip*dat$Ext,na.rm=T)
sum(dat$Zip*dat$Ext,na.rm=T)
restaurantFile = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(restaurantFile, destfile="xml")
library(XML)
install.packages("XML")
library(XML)
doc <- xmlTreeParse(restaurantFile, useInternal=TRUE)
doc <- xmlTreeParse(re, useInternal=TRUE)
download.file(restaurantFile, destfile="restaurants.xml")
doc <- xmlTreeParse("restaurants.xml", useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
zipcodes <- xpathSApply(rootNode, "//zipcode")
?xpathSApply
zipcodes
zipcodes <- xpathSApply(rootNode, "//zipcode", xmlValue)
zipcodes
tmp <- zipcodes == "21231"
tmp
sum(tmp)
zipcodes == "21231"
surveyUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(surveyUrl, destfile="survey.csv")
?fread
read.table()
my_df <- data.frame()
read.table(my_df)
my_df <- read.table("survey.csv", header=TRUE, sep=",")
DT <- read.table("survey.csv", header=TRUE, sep=",")
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
DT[mean(DT$pwgtp15,by=DT$SEX)]
system.time(DT[mean(DT$pwgtp15,by=DT$SEX)])
?system.time
system.time(DT[,mean(DT$pwgtp15,by=DT$SEX)])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(DT[,mean(DT$pwgtp15,by=DT$SEX)])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
#A
st = proc.time()
for (i in 1:100){
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
print (proc.time() - st)
#B
st = proc.time()
for (i in 1:100){
rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
}
print (proc.time() - st)
#C
st = proc.time()
for (i in 1:100){
mean(DT$pwgtp15,by=DT$SEX)
}
print (proc.time() - st)
#D
st = proc.time()
for (i in 1:100){
tapply(DT$pwgtp15,DT$SEX,mean)
}
print (proc.time() - st)
#E
st = proc.time()
for (i in 1:100){
mean(DT[DT$SEX==1,]$pwgtp15);mean(DT[DT$SEX==2,]$pwgtp15)
}
print (proc.time() - st)
#F
st = proc.time()
for (i in 1:100){
DT[,mean(pwgtp15),by=SEX]
}
print (proc.time() - st)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time({DTmean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]   )
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
trialsize <= 200
trialsize <- 200
for (i in 1:trialsize){
e1 <- system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
e2 <- system.time(tapply(DT$pwgtp15,DT$SEX,mean))
e3 <- system.time(DT[,mean(pwgtp15),by=SEX])
exp1u[i] <- e1[1]
exp2u[i]  <- e2[1]
exp3u[i]  <- e3[1]
}
print("sappily:")
print(mean(exp1u))
print("tapply:")
print(mean(exp2u))
print("data.table:")
print(mean(exp3u))
exp1u <- numeric(trialsize)
exp2u <- numeric(trialsize)
exp3u <- numeric(trialsize)
for (i in 1:trialsize){
e1 <- system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
e2 <- system.time(tapply(DT$pwgtp15,DT$SEX,mean))
e3 <- system.time(DT[,mean(pwgtp15),by=SEX])
exp1u[i] <- e1[1]
exp2u[i]  <- e2[1]
exp3u[i]  <- e3[1]
}
print("sappily:")
print(mean(exp1u))
print("tapply:")
print(mean(exp2u))
print("data.table:")
print(mean(exp3u))
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
sapply(split(DT$pwgtp15,DT$SEX),mean)
DT[,mean(pwgtp15),by=SEX]
{rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]}
tapply(DT$pwgtp15,DT$SEX,mean)
t1 <- proc.time()
for (i in 1:1000) {
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
}
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
rowMeans(DT)[DT$SEX==1]
t1 <- proc.time()
for (i in 1:trialsize){
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
}
mean(DT[DT$SEX==1,]$pwgtp15);
mean(DT[DT$SEX==2,]$pwgtp15)
t1 <- proc.time()
for (i in 1:trialsize){
mean(DT[DT$SEX==1,]$pwgtp15)
mean(DT[DT$SEX==2,]$pwgtp15)
}
t1 <- proc.time()
for (i in 1:trialsize){
mean(DT[DT$SEX==1,]$pwgtp15)
mean(DT[DT$SEX==2,]$pwgtp15)
}
t1 <- proc.time();
for (i in 1:trialsize){
mean(DT[DT$SEX==1,]$pwgtp15);
mean(DT[DT$SEX==2,]$pwgtp15);
}
trialsize <- 100;
t1 <- proc.time();
for (i in 1:trialsize){
mean(DT[DT$SEX==1,]$pwgtp15);
mean(DT[DT$SEX==2,]$pwgtp15);
}
t2 <- proc.time();
t2 - t1;
t1
proc.time()
Sys.time()
trialsize <- 100;
t1 <- proc.time();
for (i in 1:trialsize){
mean(DT[DT$SEX==1,]$pwgtp15);
mean(DT[DT$SEX==2,]$pwgtp15);
}
t2 <- proc.time();
t2 - t1;
t1 <- proc.time();
for (i in 1:trialsize){
sapply(split(DT$pwgtp15,DT$SEX),mean);
}
t2 <- proc.time();
t2 - t1;
t1 <- proc.time();
for (i in 1:trialsize){
tapply(DT$pwgtp15,DT$SEX,mean);
}
t2 <- proc.time();
t2 - t1;
library(microbenchmark)
install.packages("microbenchmark")
library(microbenchmark)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
bench <- microbenchmark({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}, sapply(split(DT$pwgtp15,DT$SEX),mean), tapply(DT$pwgtp15,DT$SEX,mean))
autoplot(bench)
?sapply
library(data.table)
DT <- fread("getdata-data-ss06pid.csv")
trialsize=200
exp1u <- numeric(trialsize)
exp2u <- numeric(trialsize)
exp3u <- numeric(trialsize)
for (i in 1:trialsize){
e1 <- system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
e2 <- system.time(tapply(DT$pwgtp15,DT$SEX,mean))
e3 <- system.time(DT[,mean(pwgtp15),by=SEX])
exp1u[i] <- e1[1]
exp2u[i]  <- e2[1]
exp3u[i]  <- e3[1]
}
print("sapply")
print(mean(exp1u))
print("tapply")
print(mean(exp2u))
print("data.table")
print(mean(exp3u))
download.file(surveyUrl, destfile="getdata-data-ss06pid.csv")
DT <- read.table("getdata-data-ss06pid.csv", header=TRUE, sep=",")
trialsize=200
exp1u <- numeric(trialsize)
exp2u <- numeric(trialsize)
exp3u <- numeric(trialsize)
for (i in 1:trialsize){
e1 <- system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
e2 <- system.time(tapply(DT$pwgtp15,DT$SEX,mean))
e3 <- system.time(DT[,mean(pwgtp15),by=SEX])
exp1u[i] <- e1[1]
exp2u[i]  <- e2[1]
exp3u[i]  <- e3[1]
}
print("sapply")
print(mean(exp1u))
print("tapply")
print(mean(exp2u))
print("data.table")
print(mean(exp3u))
DT <- fread("getdata-data-ss06pid.csv")
library(data.table)
DT <- fread("getdata-data-ss06pid.csv")
bench <- microbenchmark({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}, sapply(split(DT$pwgtp15,DT$SEX),mean), tapply(DT$pwgtp15,DT$SEX,mean))
autoplot(bench)
bench <- microbenchmark({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}, sapply(split(DT$pwgtp15,DT$SEX),mean), tapply(DT$pwgtp15,DT$SEX,mean), DT[,mean(pwgtp15),by=SEX])
autoplot(bench)
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
DT <- read.table("getdata-data-ss06pid.csv", header=TRUE, sep=",")
bench <- microbenchmark({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}, sapply(split(DT$pwgtp15,DT$SEX),mean), tapply(DT$pwgtp15,DT$SEX,mean), DT[,mean(pwgtp15),by=SEX])
autoplot(bench)
bench <- microbenchmark({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}, sapply(split(DT$pwgtp15,DT$SEX),mean), tapply(DT$pwgtp15,DT$SEX,mean), {DT[,mean(pwgtp15),by=SEX]})
DT[,mean(pwgtp15),by=SEX]
DT[,mean(pwgtp15),by=SEX]
DT <- fread("getdata-data-ss06pid.csv")
DT[,mean(pwgtp15),by=SEX]
?read.table
?fread
